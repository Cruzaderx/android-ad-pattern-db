{
    "metadata": {
        "category": "Storage Security",
        "version": "1.0.0",
        "last_updated": "2025-02-22T05:44:00Z",
        "description": "Data storage and privacy-related security vulnerabilities in Android applications"
    },
    "vulnerabilities": [
        {
            "id": "STORAGE-003",
            "name": "Hardcoded Encryption Key",
            "description": "Application uses hardcoded encryption keys for sensitive data storage, making it trivial to decrypt data across all app installations.",
            "severity": {
                "level": "Critical",
                "impact": "Data decryption, sensitive information exposure, and encryption bypass",
                "exploitability": "Easy"
            },
            "detection": {
                "pattern": [
                    "SecretKeySpec\\([\"'][0-9a-fA-F]+[\"']",
                    "byte\\[\\]\\s+key\\s*=\\s*\\{[^}]+\\}",
                    "String\\s+key\\s*=\\s*[\"'][0-9a-fA-F]+[\"']",
                    "IvParameterSpec\\([\"'][0-9a-fA-F]+[\"']"
                ],
                "method": "static",
                "indicators": [
                    "Key initialization",
                    "Encryption setup",
                    "Cipher usage",
                    "IV definition"
                ],
                "accuracy_improvements": {
                    "required_conditions": [
                        "Encryption implementation",
                        "Key usage",
                        "Data encryption"
                    ],
                    "exclusion_patterns": [
                        "getKey\\(\\)",
                        "KeyStore\\.getInstance",
                        "generateKey\\(\\)"
                    ],
                    "validation_steps": [
                        "Check key source",
                        "Analyze key usage",
                        "Review encryption",
                        "Verify key storage"
                    ],
                    "context_requirements": [
                        "Data encryption usage",
                        "Key management"
                    ]
                },
                "confidence_score": {
                    "static_analysis": 95,
                    "dynamic_analysis": 85,
                    "manual_review": 90
                }
            },
            "exploit": {
                "difficulty": "Easy",
                "steps": [
                    "Extract encryption key",
                    "Locate encrypted data",
                    "Implement decryption",
                    "Access sensitive data",
                    "Reuse key across installs"
                ],
                "requirements": [
                    "App binary access",
                    "Encryption knowledge",
                    "Data extraction tools"
                ],
                "verification": {
                    "test_cases": [
                        "Extract hardcoded key",
                        "Decrypt stored data",
                        "Verify data access"
                    ],
                    "expected_results": [
                        "Key extraction success",
                        "Decryption works",
                        "Data readable"
                    ]
                }
            },
            "affected_components": [
                "Encryption implementation",
                "Key management",
                "Data storage"
            ],
            "tags": [
                "encryption",
                "keys",
                "hardcoding",
                "storage"
            ]
        },
        {
            "id": "STORAGE-004",
            "name": "Insecure Keystore Usage",
            "description": "Application improperly implements Android Keystore, potentially exposing keys or allowing unauthorized key access.",
            "severity": {
                "level": "High",
                "impact": "Key exposure, unauthorized access, and cryptographic bypass",
                "exploitability": "Medium"
            },
            "detection": {
                "pattern": [
                    "KeyStore\\.getInstance\\([^)]*\\)",
                    "KeyStore\\.load\\(null\\)",
                    "KeyGenerator\\.getInstance\\([^,]+,\\s*\"AndroidKeyStore\"\\)",
                    "KeyStore\\.getKey\\([^,]+,\\s*null\\)"
                ],
                "method": "static",
                "indicators": [
                    "Keystore initialization",
                    "Key generation",
                    "Key retrieval",
                    "Keystore loading"
                ],
                "accuracy_improvements": {
                    "required_conditions": [
                        "Keystore usage",
                        "Key operations",
                        "Cryptographic functions"
                    ],
                    "exclusion_patterns": [
                        "setEncryptionPadding",
                        "setUserAuthenticationRequired",
                        "setInvalidatedByBiometricEnrollment"
                    ],
                    "validation_steps": [
                        "Check keystore setup",
                        "Verify key protection",
                        "Analyze usage context",
                        "Review security params"
                    ],
                    "context_requirements": [
                        "Keystore implementation",
                        "Key security features"
                    ]
                },
                "confidence_score": {
                    "static_analysis": 90,
                    "dynamic_analysis": 85,
                    "manual_review": 95
                }
            },
            "exploit": {
                "difficulty": "Medium",
                "steps": [
                    "Analyze keystore usage",
                    "Identify weak implementation",
                    "Extract/access keys",
                    "Bypass key protection",
                    "Access protected data"
                ],
                "requirements": [
                    "Root access",
                    "Keystore knowledge",
                    "Crypto analysis tools"
                ],
                "verification": {
                    "test_cases": [
                        "Access keystore",
                        "Extract keys",
                        "Bypass protection"
                    ],
                    "expected_results": [
                        "Keystore accessed",
                        "Keys extracted",
                        "Protection bypassed"
                    ]
                }
            },
            "affected_components": [
                "Android Keystore",
                "Key management",
                "Cryptographic operations"
            ],
            "tags": [
                "keystore",
                "crypto",
                "keys",
                "security"
            ]
        },
        {
            "id": "STORAGE-005",
            "name": "SQLite Database Injection",
            "description": "Application performs raw SQL queries with unvalidated input, enabling SQL injection attacks against local SQLite databases.",
            "severity": {
                "level": "High",
                "impact": "Data manipulation, information disclosure, and database corruption",
                "exploitability": "Medium"
            },
            "detection": {
                "pattern": [
                    "db\\.rawQuery\\([^,]+\\+[^,]+",
                    "db\\.execSQL\\([^,]+\\+[^,]+",
                    "SQLiteDatabase\\.rawQuery\\([^,]+\\+[^,]+",
                    "getReadableDatabase\\(\\)[^.]*\\.rawQuery"
                ],
                "method": "static",
                "indicators": [
                    "Raw SQL usage",
                    "Query construction",
                    "Database operations",
                    "Input concatenation"
                ],
                "accuracy_improvements": {
                    "required_conditions": [
                        "SQLite database usage",
                        "Raw query execution",
                        "Dynamic SQL"
                    ],
                    "exclusion_patterns": [
                        "SQLiteQueryBuilder",
                        "selectionArgs",
                        "prepareStatement"
                    ],
                    "validation_steps": [
                        "Check query building",
                        "Analyze input handling",
                        "Review SQL usage",
                        "Verify parameterization"
                    ],
                    "context_requirements": [
                        "Database operations",
                        "Query execution"
                    ]
                },
                "confidence_score": {
                    "static_analysis": 90,
                    "dynamic_analysis": 85,
                    "manual_review": 95
                }
            },
            "exploit": {
                "difficulty": "Medium",
                "steps": [
                    "Identify injection point",
                    "Craft malicious input",
                    "Execute SQL injection",
                    "Extract/modify data",
                    "Manipulate database"
                ],
                "requirements": [
                    "Input control",
                    "SQLite knowledge",
                    "Database access"
                ],
                "verification": {
                    "test_cases": [
                        "Inject SQL commands",
                        "Modify database",
                        "Extract data"
                    ],
                    "expected_results": [
                        "Injection successful",
                        "Data modified",
                        "Information extracted"
                    ]
                }
            },
            "affected_components": [
                "SQLite database",
                "Query execution",
                "Data storage"
            ],
            "tags": [
                "sqlite",
                "injection",
                "database",
                "storage"
            ]
        },
        {
            "id": "STORAGE-001",
            "name": "World-Readable Files",
            "description": "Application creates files with MODE_WORLD_READABLE or insecure file permissions, allowing other apps to access sensitive data.",
            "severity": {
                "level": "Critical",
                "impact": "Data exposure, privacy breach, and information theft",
                "exploitability": "Easy"
            },
            "detection": {
                "pattern": [
                    "MODE_WORLD_READABLE",
                    "openFileOutput\\([^,]+,\\s*[^)]*Context\\.MODE_WORLD_READABLE\\)",
                    "chmod\\s+[0-7]*[467][0-7]{2}\\s",
                    "\\.setReadable\\(true,\\s*false\\)"
                ],
                "method": "static",
                "indicators": [
                    "File creation modes",
                    "Permission flags",
                    "File system operations",
                    "External storage usage"
                ],
                "accuracy_improvements": {
                    "required_conditions": [
                        "File operations present",
                        "Permission setting code",
                        "Data storage implementation"
                    ],
                    "exclusion_patterns": [
                        "MODE_PRIVATE",
                        "setReadable\\(true,\\s*true\\)",
                        "Context\\.MODE_PRIVATE"
                    ],
                    "validation_steps": [
                        "Check file modes",
                        "Analyze permissions",
                        "Review storage location",
                        "Verify access restrictions"
                    ],
                    "context_requirements": [
                        "App stores sensitive data",
                        "File system usage"
                    ]
                },
                "confidence_score": {
                    "static_analysis": 95,
                    "dynamic_analysis": 90,
                    "manual_review": 85
                }
            },
            "exploit": {
                "difficulty": "Easy",
                "steps": [
                    "Locate app data directory",
                    "List file permissions",
                    "Access readable files",
                    "Extract sensitive data"
                ],
                "requirements": [
                    "Android device",
                    "File system access",
                    "Target app installed"
                ],
                "verification": {
                    "test_cases": [
                        "Check file permissions",
                        "Read file contents",
                        "Access from other app"
                    ],
                    "expected_results": [
                        "Files are readable",
                        "Data extraction success",
                        "No permission errors"
                    ]
                }
            },
            "affected_components": [
                "File system",
                "Data storage",
                "File permissions"
            ],
            "tags": [
                "storage",
                "permissions",
                "files",
                "privacy"
            ]
        },
        {
            "id": "STORAGE-002",
            "name": "Insecure External Storage",
            "description": "Application stores sensitive data on external storage (SD card) without encryption or proper access controls.",
            "severity": {
                "level": "High",
                "impact": "Data theft, privacy violation, and information disclosure",
                "exploitability": "Easy"
            },
            "detection": {
                "pattern": [
                    "getExternalStorageDirectory\\(\\)",
                    "getExternalFilesDir\\([^)]*\\)",
                    "Environment\\.DIRECTORY_[A-Z_]+",
                    "(?<!encrypted)FileOutputStream\\(.*getExternalStorage"
                ],
                "method": "static",
                "indicators": [
                    "External storage usage",
                    "File operations",
                    "Storage permissions",
                    "Data writing"
                ],
                "accuracy_improvements": {
                    "required_conditions": [
                        "External storage access",
                        "Data writing operations",
                        "Storage permissions requested"
                    ],
                    "exclusion_patterns": [
                        "encryptFile",
                        "cipher\\.doFinal",
                        "SecretKeySpec"
                    ],
                    "validation_steps": [
                        "Check storage location",
                        "Verify encryption",
                        "Analyze data sensitivity",
                        "Review access controls"
                    ],
                    "context_requirements": [
                        "App uses external storage",
                        "Sensitive data handling"
                    ]
                },
                "confidence_score": {
                    "static_analysis": 90,
                    "dynamic_analysis": 85,
                    "manual_review": 95
                }
            },
            "exploit": {
                "difficulty": "Easy",
                "steps": [
                    "Mount external storage",
                    "Navigate to app directory",
                    "Access stored files",
                    "Extract unencrypted data"
                ],
                "requirements": [
                    "Physical device access",
                    "External storage access",
                    "File system tools"
                ],
                "verification": {
                    "test_cases": [
                        "Locate external files",
                        "Read file contents",
                        "Check encryption"
                    ],
                    "expected_results": [
                        "Files accessible",
                        "Data readable",
                        "No encryption"
                    ]
                }
            },
            "affected_components": [
                "External storage",
                "File operations",
                "Data protection"
            ],
            "tags": [
                "storage",
                "external",
                "encryption",
                "privacy"
            ]
        }
    ]
}