{
    "metadata": {
        "category": "IPC/Binder Security",
        "version": "1.0.0",
        "last_updated": "2025-02-22T07:03:00Z",
        "description": "IPC and Binder-related security vulnerabilities in Android applications including transaction manipulation and service abuse"
    },
    "vulnerabilities": [
        {
            "id": "IPC-001",
            "name": "Binder Transaction Overflow",
            "description": "Application fails to properly validate Binder transaction sizes, leading to buffer overflows and memory corruption in the Binder driver.",
            "severity": {
                "level": "Critical",
                "impact": "Memory corruption, system crash, and potential code execution",
                "exploitability": "Hard"
            },
            "detection": {
                "pattern": [
                    "Parcel\\.writeInt\\([^)]+\\)",
                    "Parcel\\.createByteArray\\([^)]+\\)",
                    "transact\\([^,]+,\\s*[^,]+,\\s*[^,]+\\)",
                    "onTransact\\([^,]+,\\s*[^,]+,\\s*[^,]+\\)"
                ],
                "method": "static",
                "indicators": [
                    "Binder transaction",
                    "Parcel handling",
                    "Size calculation",
                    "Data marshalling"
                ],
                "accuracy_improvements": {
                    "required_conditions": [
                        "Binder IPC usage",
                        "Transaction handling",
                        "Size validation"
                    ],
                    "exclusion_patterns": [
                        "checkSize",
                        "validateTransaction",
                        "enforceLimit"
                    ],
                    "validation_steps": [
                        "Check size validation",
                        "Analyze transaction",
                        "Review marshalling",
                        "Verify limits"
                    ],
                    "context_requirements": [
                        "Binder service",
                        "IPC communication"
                    ]
                },
                "confidence_score": {
                    "static_analysis": 85,
                    "dynamic_analysis": 90,
                    "manual_review": 95
                }
            },
            "exploit": {
                "difficulty": "Hard",
                "steps": [
                    "Identify transaction",
                    "Calculate overflow",
                    "Craft large parcel",
                    "Trigger transaction",
                    "Corrupt memory"
                ],
                "requirements": [
                    "Binder knowledge",
                    "Memory manipulation",
                    "Transaction control"
                ],
                "verification": {
                    "test_cases": [
                        "Send large transaction",
                        "Monitor memory",
                        "Check corruption"
                    ],
                    "expected_results": [
                        "Transaction accepted",
                        "Memory corrupted",
                        "System affected"
                    ]
                }
            },
            "affected_components": [
                "Binder driver",
                "IPC system",
                "Memory management"
            ],
            "tags": [
                "binder",
                "overflow",
                "ipc",
                "memory-corruption"
            ]
        },
        {
            "id": "IPC-002",
            "name": "AIDL Interface Exposure",
            "description": "Application exposes sensitive AIDL interfaces without proper permission checks, allowing unauthorized access to privileged functionality.",
            "severity": {
                "level": "High",
                "impact": "Unauthorized access, privilege escalation, and data exposure",
                "exploitability": "Medium"
            },
            "detection": {
                "pattern": [
                    "interface\\s+I[A-Z][a-zA-Z]+\\s*\\{",
                    "@Override\\s+public\\s+IBinder\\s+onBind",
                    "Stub\\.asInterface\\([^)]+\\)",
                    "(?<!check)Permission[^;]*;\\s*return\\s+true"
                ],
                "method": "static",
                "indicators": [
                    "AIDL interface",
                    "Service binding",
                    "Permission checks",
                    "Interface exposure"
                ],
                "accuracy_improvements": {
                    "required_conditions": [
                        "AIDL usage",
                        "Service implementation",
                        "Interface exposure"
                    ],
                    "exclusion_patterns": [
                        "enforcePermission",
                        "checkCallingPermission",
                        "validateCaller"
                    ],
                    "validation_steps": [
                        "Check permissions",
                        "Analyze interface",
                        "Review exposure",
                        "Verify access control"
                    ],
                    "context_requirements": [
                        "AIDL service",
                        "IPC implementation"
                    ]
                },
                "confidence_score": {
                    "static_analysis": 90,
                    "dynamic_analysis": 85,
                    "manual_review": 95
                }
            },
            "exploit": {
                "difficulty": "Medium",
                "steps": [
                    "Identify interface",
                    "Analyze methods",
                    "Create client",
                    "Bypass permissions",
                    "Access functionality"
                ],
                "requirements": [
                    "AIDL knowledge",
                    "Service binding",
                    "Permission bypass"
                ],
                "verification": {
                    "test_cases": [
                        "Bind to service",
                        "Call methods",
                        "Check permissions"
                    ],
                    "expected_results": [
                        "Service bound",
                        "Methods accessed",
                        "Permissions bypassed"
                    ]
                }
            },
            "affected_components": [
                "AIDL interfaces",
                "Service binding",
                "Permission system"
            ],
            "tags": [
                "aidl",
                "ipc",
                "permissions",
                "service"
            ]
        },
        {
            "id": "IPC-003",
            "name": "Parcel Data Injection",
            "description": "Application fails to properly validate Parcel data during IPC transactions, allowing injection of malicious data and potential memory corruption.",
            "severity": {
                "level": "High",
                "impact": "Data manipulation, memory corruption, and service disruption",
                "exploitability": "Medium"
            },
            "detection": {
                "pattern": [
                    "readParcelable\\([^)]+\\)",
                    "createFromParcel\\([^)]+\\)",
                    "unmarshall\\([^)]+\\)",
                    "(?<!validate)readValue\\([^)]+\\)"
                ],
                "method": "static",
                "indicators": [
                    "Parcel reading",
                    "Data unmarshalling",
                    "Object creation",
                    "Type validation"
                ],
                "accuracy_improvements": {
                    "required_conditions": [
                        "Parcel handling",
                        "Data unmarshalling",
                        "Type checking"
                    ],
                    "exclusion_patterns": [
                        "validateParcel",
                        "checkType",
                        "verifyData"
                    ],
                    "validation_steps": [
                        "Check data validation",
                        "Analyze unmarshalling",
                        "Review type safety",
                        "Verify boundaries"
                    ],
                    "context_requirements": [
                        "Parcel usage",
                        "IPC data handling"
                    ]
                },
                "confidence_score": {
                    "static_analysis": 85,
                    "dynamic_analysis": 90,
                    "manual_review": 95
                }
            },
            "exploit": {
                "difficulty": "Medium",
                "steps": [
                    "Identify parcel usage",
                    "Analyze data handling",
                    "Craft malicious data",
                    "Send via IPC",
                    "Trigger unmarshalling"
                ],
                "requirements": [
                    "Parcel manipulation",
                    "IPC access",
                    "Data crafting"
                ],
                "verification": {
                    "test_cases": [
                        "Send crafted parcel",
                        "Check handling",
                        "Monitor effects"
                    ],
                    "expected_results": [
                        "Data accepted",
                        "Injection successful",
                        "Service affected"
                    ]
                }
            },
            "affected_components": [
                "Parcel handling",
                "IPC communication",
                "Data validation"
            ],
            "tags": [
                "parcel",
                "ipc",
                "injection",
                "data-validation"
            ]
        }
    ]
}